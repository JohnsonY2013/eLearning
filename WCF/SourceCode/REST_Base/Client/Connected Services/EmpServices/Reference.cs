//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.REST.Client.EmpServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.digitcyber.com/", ConfigurationName="EmpServices.IEmployees")]
    public interface IEmployees {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/GetAll", ReplyAction="http://www.digitcyber.com/IEmployees/GetAllResponse")]
        WCF.REST.Services.Employee[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/GetAll", ReplyAction="http://www.digitcyber.com/IEmployees/GetAllResponse")]
        System.Threading.Tasks.Task<WCF.REST.Services.Employee[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Get", ReplyAction="http://www.digitcyber.com/IEmployees/GetResponse")]
        WCF.REST.Services.Employee Get(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Get", ReplyAction="http://www.digitcyber.com/IEmployees/GetResponse")]
        System.Threading.Tasks.Task<WCF.REST.Services.Employee> GetAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Create", ReplyAction="http://www.digitcyber.com/IEmployees/CreateResponse")]
        void Create(WCF.REST.Services.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Create", ReplyAction="http://www.digitcyber.com/IEmployees/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(WCF.REST.Services.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Update", ReplyAction="http://www.digitcyber.com/IEmployees/UpdateResponse")]
        void Update(WCF.REST.Services.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Update", ReplyAction="http://www.digitcyber.com/IEmployees/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WCF.REST.Services.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Delete", ReplyAction="http://www.digitcyber.com/IEmployees/DeleteResponse")]
        void Delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.digitcyber.com/IEmployees/Delete", ReplyAction="http://www.digitcyber.com/IEmployees/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeesChannel : WCF.REST.Client.EmpServices.IEmployees, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeesClient : System.ServiceModel.ClientBase<WCF.REST.Client.EmpServices.IEmployees>, WCF.REST.Client.EmpServices.IEmployees {
        
        public EmployeesClient() {
        }
        
        public EmployeesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF.REST.Services.Employee[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WCF.REST.Services.Employee[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WCF.REST.Services.Employee Get(string id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<WCF.REST.Services.Employee> GetAsync(string id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Create(WCF.REST.Services.Employee employee) {
            base.Channel.Create(employee);
        }
        
        public System.Threading.Tasks.Task CreateAsync(WCF.REST.Services.Employee employee) {
            return base.Channel.CreateAsync(employee);
        }
        
        public void Update(WCF.REST.Services.Employee employee) {
            base.Channel.Update(employee);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WCF.REST.Services.Employee employee) {
            return base.Channel.UpdateAsync(employee);
        }
        
        public void Delete(string id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
